{"version":3,"sources":["components/inputFields.js","components/spotifyApi.js","components/toast.js","components/generatePlaylist.js","components/loaderIcon.js","components/scrollTop.js","index.js"],"names":["inputFields","target","selectorType","result","document","querySelectorAll","querySelector","token","clientId","fetch","method","headers","btoa","body","data","json","access_token","getPlaylist","playlistId","playlistLength","split","length","tracks","items","toast","toastDiv","createElement","classList","add","innerText","setTimeout","style","top","remove","appendChild","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","generatePlaylist","playlistLink","value","tokenAwait","trackIndex","forEach","ele","element","trackInfo","track","albumInfo","album","ArtistInfo","artists","innerHTML","images","url","name","map","key","join","release_date","duration_ms","addEventListener","jointTrackTitle","textContent","navigator","clipboard","writeText","loaderIcon","location","option","display","console","log","scrollTop","scrollIntoView","behavior"],"mappings":"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","file":"src.2e6c0282.js","sourceRoot":"..\\src","sourcesContent":["export const inputFields = (target, selectorType) => {\r\n    let result;\r\n    \r\n    if(selectorType == 'all'){\r\n        result = document.querySelectorAll(target);\r\n    } else {\r\n        result = document.querySelector(target);\r\n    }\r\n\r\n    if(result !== null){\r\n        return result;\r\n    }else{\r\n        return {};\r\n    } \r\n}\r\n","\r\nexport const token = async () => {\r\n    const clientId = '1020f7120f9941208b9563735957a5c8';\r\n    const clientSecret = '89cd9336aa1949fca177caa8b1c4507a';\r\n\r\n    const result = await fetch('https://accounts.spotify.com/api/token', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type' : 'application/x-www-form-urlencoded', \r\n            'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n        },\r\n        body: 'grant_type=client_credentials'\r\n    });\r\n\r\n    const data = await result.json();\r\n    return data.access_token;\r\n}\r\nexport const getPlaylist = async (token,playlistId) => {\r\n    const playlistLength = playlistId.split('/').length;\r\n    \r\n    const result = await fetch(`https://api.spotify.com/v1/playlists/${playlistId.split('/')[playlistLength - 1]}`, {\r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token}\r\n    });\r\n\r\n    const data = await result.json();\r\n\r\n    \r\n    return data.tracks.items;\r\n}","export const toast = () => {\r\n        let toastDiv = document.createElement(\"DIV\"); \r\n        toastDiv.classList.add('toast');\r\n        toastDiv.innerText = \"Track name is copied to clipboard\";   \r\n        setTimeout(()=> {\r\n            toastDiv.style.top = \"-50px\";\r\n        },3000);\r\n        setTimeout(()=> {\r\n            toastDiv.remove();\r\n        },3500);\r\n        return(\r\n            document.body.appendChild(toastDiv)  \r\n        )\r\n}","import { inputFields } from './inputFields';\r\nimport { token , getPlaylist} from './spotifyApi';\r\nimport { toast } from './toast';\r\n\r\n \r\nfunction millisToMinutesAndSeconds(millis) {\r\n    const minutes = Math.floor(millis / 60000);\r\n    const seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\n\r\n\r\nexport const generatePlaylist = async () => {\r\n    const playlistLink =  inputFields('.input','').value;\r\n\r\n    const tokenAwait = await token();\r\n    const data = await getPlaylist(tokenAwait,playlistLink);\r\n\r\n   // inputFields('.body-color').style.overflow=\"auto\";\r\n\r\n    let trackIndex = 1;\r\n\r\n    const singleTrackList = document.querySelectorAll('.table-container .table .body .single-track-info');\r\n        \r\n    singleTrackList.forEach(ele => {\r\n        ele.remove();\r\n    })\r\n\r\n    data.forEach(element => {\r\n        const trackInfo = element.track;\r\n        const albumInfo = element.track.album;\r\n        const ArtistInfo = element.track.artists;  \r\n      \r\n    \r\n        inputFields('.table-container .table .body','').innerHTML += `\r\n        <div class=\"single-track-info col\">\r\n        <div>${trackIndex}</div>\r\n        <div class=\"album\">\r\n            <img src=\"${albumInfo.images[2].url}\" class=\"img-fluid\" alt=\"album art\">\r\n            <div>\r\n            <h5>${trackInfo.name}</h5>\r\n            <p>${ArtistInfo.map(function (key) {\r\n                return key.name           \r\n            }).join(\", \")}</p>\r\n            </div>\r\n        </div>\r\n            <div>${albumInfo.name}</div>\r\n            <div>${albumInfo.release_date}</div>\r\n            <div>${millisToMinutesAndSeconds(trackInfo.duration_ms)}</div>\r\n            <div>\r\n                <div class=\"actions\">\r\n                    <i class=\"material-icons\" title=\"Copy track title\">content_copy</i>\r\n                    <i class=\"material-icons\" title=\"Get YouTube link\">\r\n                        <svg height=\"682pt\" viewBox=\"-21 -117 682.66672 682\" width=\"682pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m626.8125 64.035156c-7.375-27.417968-28.992188-49.03125-56.40625-56.414062-50.082031-13.703125-250.414062-13.703125-250.414062-13.703125s-200.324219 0-250.40625 13.183593c-26.886719 7.375-49.03125 29.519532-56.40625 56.933594-13.179688 50.078125-13.179688 153.933594-13.179688 153.933594s0 104.378906 13.179688 153.933594c7.382812 27.414062 28.992187 49.027344 56.410156 56.410156 50.605468 13.707031 250.410156 13.707031 250.410156 13.707031s200.324219 0 250.40625-13.183593c27.417969-7.378907 49.03125-28.992188 56.414062-56.40625 13.175782-50.082032 13.175782-153.933594 13.175782-153.933594s.527344-104.382813-13.183594-154.460938zm-370.601562 249.878906v-191.890624l166.585937 95.945312zm0 0\"/></svg>\r\n                    </i>\r\n                    <i class=\"material-icons\" title=\"Copy Spotify link\">\r\n                        <svg id=\"Bold\" enable-background=\"new 0 0 24 24\" height=\"512\" viewBox=\"0 0 24 24\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m12 24c6.624 0 12-5.376 12-12s-5.376-12-12-12-12 5.376-12 12 5.376 12 12 12zm4.872-6.344v.001c-.807 0-3.356-2.828-10.52-1.36-.189.049-.436.126-.576.126-.915 0-1.09-1.369-.106-1.578 3.963-.875 8.013-.798 11.467 1.268.824.526.474 1.543-.265 1.543zm1.303-3.173c-.113-.03-.08.069-.597-.203-3.025-1.79-7.533-2.512-11.545-1.423-.232.063-.358.126-.576.126-1.071 0-1.355-1.611-.188-1.94 4.716-1.325 9.775-.552 13.297 1.543.392.232.547.533.547.953-.005.522-.411.944-.938.944zm-13.627-7.485c4.523-1.324 11.368-.906 15.624 1.578 1.091.629.662 2.22-.498 2.22l-.001-.001c-.252 0-.407-.063-.625-.189-3.443-2.056-9.604-2.549-13.59-1.436-.175.048-.393.125-.625.125-.639 0-1.127-.499-1.127-1.142 0-.657.407-1.029.842-1.155z\"/></svg>\r\n                    </i>\r\n                </div>\r\n            </div>\r\n        </div>`;\r\n        trackIndex++; \r\n    });\r\n\r\n    const singleTrack = inputFields('.table-container .table .body .single-track-info div:nth-child(2)','all');\r\n\r\n    singleTrack.forEach(element => {\r\n        element.addEventListener('click', () => { \r\n            let jointTrackTitle = `${element.querySelector('p').textContent} - ${element.querySelector('h5').textContent}`;\r\n            navigator.clipboard.writeText(jointTrackTitle)\r\n            toast();\r\n        });\r\n    })\r\n\r\n}\r\n\r\n","import { inputFields } from './inputFields';\r\n\r\nexport const loaderIcon = (location, option) => {\r\n\r\n    if(option != 'remove'){ \r\n        inputFields(location,'').style.display=\"block\";  \r\n    } else {\r\n        console.log('removed inn ')\r\n        inputFields(location,'').style.display=\"none\"; \r\n    }\r\n\r\n    setTimeout(()=> {\r\n        inputFields('.message','').style.display=\"none\"; \r\n    },1000)\r\n    \r\n}","import { inputFields } from './inputFields';\r\n\r\nexport const scrollTop = () => {\r\n\r\n    inputFields('.scroll-top','').addEventListener('click', () => {\r\n        inputFields('body','').scrollIntoView({ behavior: 'smooth'});\r\n    })\r\n \r\n}","import { generatePlaylist } from './components/generatePlaylist';\r\nimport { inputFields } from './components/inputFields';\r\nimport { loaderIcon } from './components/loaderIcon'; \r\nimport { scrollTop } from './components/scrollTop';\r\n\r\nimport './scss/main.scss';\r\n\r\ninputFields('.search-btn','').addEventListener('click', async () => {\r\n    const playlistLink =  inputFields('.input','').value;\r\n    if(playlistLink){ \r\n        inputFields('.playlist-container','').scrollIntoView({ behavior: 'smooth'});\r\n        loaderIcon('.playlist-container .container .table-container .loader',''); \r\n        setTimeout(async () =>{ \r\n            await generatePlaylist();\r\n           inputFields('.playlist-container .container .table-container .loader','').style.display=\"none\"; \r\n        }, 1000);\r\n    } else {\r\n\r\n    }\r\n})\r\n\r\nscrollTop();\r\n\r\n\r\n"]}